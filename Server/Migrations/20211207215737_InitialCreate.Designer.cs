// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server;

namespace Server.Migrations
{
    [DbContext(typeof(ResultContext))]
    [Migration("20211207215737_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("Server.DetectedObject", b =>
                {
                    b.Property<int>("DetectedObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("BitmapImage")
                        .HasColumnType("BLOB");

                    b.Property<string>("OutputPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TypeResultsId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("x1")
                        .HasColumnType("REAL");

                    b.Property<float>("x2")
                        .HasColumnType("REAL");

                    b.Property<float>("y1")
                        .HasColumnType("REAL");

                    b.Property<float>("y2")
                        .HasColumnType("REAL");

                    b.HasKey("DetectedObjectId");

                    b.HasIndex("TypeResultsId");

                    b.ToTable("DetectedObject");
                });

            modelBuilder.Entity("Server.Results", b =>
                {
                    b.Property<int>("ResultsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("ResultsId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Server.DetectedObject", b =>
                {
                    b.HasOne("Server.Results", "Type")
                        .WithMany("DetectedObjects")
                        .HasForeignKey("TypeResultsId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Server.Results", b =>
                {
                    b.Navigation("DetectedObjects");
                });
#pragma warning restore 612, 618
        }
    }
}
